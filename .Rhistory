devtools::install_github("ropenscilabs/ochRe")
library(readr)
winter <- read_csv("winter.csv", col_names = TRUE, col_types = NULL)
View(winter)
winter %>% select(Year, City)
library(dplyr)
winter %>% select(Year, City)
names(winter)
head(winter)
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(dplyr)
library(ggplot2)
library(ochRe)
goldMedalComparison <- winter %>%
filter(Medal == "Gold" & Country %in% c("CAN", "NOR", "GBR") & Year >= 2006)
View(goldMedalComparison)
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(dplyr)
library(ggplot2)
library(ochRe)
# The readr package is efficient for reading (importing) of CSV files
library(readr)
# Read the data in
winter <- read_csv("winter.csv", col_names = TRUE, col_types = NULL)
head(winter)
# The dplyr package includes useful data manipulation functions
library(dplyr)
# Subset the data
goldMedalComparison <- winter %>%
filter(Medal == "Gold"
& Country %in% c("CAN", "NOR", "GBR")
& Year >= 2006)
goldMedalComparison
goldMedalComparison$uniqueEventID <-
paste(goldMedalComparison$Year, goldMedalComparison$Sport,
goldMedalComparison$Discipline, goldMedalComparison$Country,
goldMedalComparison$Gender, goldMedalComparison$Event)
goldMedalComparison$uniqueEventID <-
paste(goldMedalComparison$Year, goldMedalComparison$Sport,
goldMedalComparison$Discipline, goldMedalComparison$Country,
goldMedalComparison$Gender, goldMedalComparison$Event, sep="_")
# Identify duplicates
goldMedalComparison$duplicates <- duplicated(goldMedalComparison$uniqueEventID)
View(goldMedalComparison)
goldMedalComparison %>%
group_by(Year, Country) %>%
summarise(goldMedalTotal = length(Medal))
goldMedalTotals <- goldMedalComparison %>%
group_by(Year, Country) %>%
summarise(goldMedalTotal = length(Medal)) %>%
ungroup()
goldMedalTotals
knitr::opts_chunk$set(echo = TRUE)
# Load libraries
library(dplyr)
library(ggplot2)
library(ochRe)
# The readr package is efficient for reading (importing) of CSV files
library(readr)
# Read the data in
winter <- read_csv("winter.csv", col_names = TRUE, col_types = NULL)
head(winter)
# The dplyr package includes useful data manipulation functions
library(dplyr)
# Subset the data
goldMedalComparison <- winter %>%
filter(Medal == "Gold"
& Country %in% c("CAN", "NOR", "SWE")
& Year >= 2006)
goldMedalComparison
# Create a new variable to identify each unique event
goldMedalComparison$uniqueEventID <-
paste(goldMedalComparison$Year, goldMedalComparison$Sport,
goldMedalComparison$Discipline, goldMedalComparison$Country,
goldMedalComparison$Gender, goldMedalComparison$Event, sep="_")
goldMedalComparison %>%
select(uniqueEventID)
# Identify duplicates
goldMedalComparison$duplicates <- duplicated(goldMedalComparison$uniqueEventID)
goldMedalComparison %>%
select(uniqueEventID, duplicates)
# Remove duplicates from the data
# and remove temporary variables used for identifying duplicates
goldMedalComparison <- goldMedalComparison %>%
filter(duplicates == FALSE) %>%
select(-uniqueEventID, -duplicates)
goldMedalComparison %>%
select(Year, Sport, Country, Event)
goldMedalTotals <- goldMedalComparison %>%
group_by(Year, Country) %>%
summarise(goldMedalTotal = length(Medal)) %>%
ungroup()
goldMedalTotals
library(reshape2)
# Reshape the data from long-to-wide format for tabulating
goldMedalTotalsWide <- dcast(goldMedalTotals, Year + Country ~ goldMedalTotal)
goldMedalTotalsWide
# Reshape the data from long-to-wide format for tabulating
goldMedalTotalsWide <- dcast(goldMedalTotals, Year ~ Country)
goldMedalTotalsWide
datatable(goldMedalTotalsWide, options = list(
dom = 't'),
row.names = FALSE)
library(DT)
datatable(goldMedalTotalsWide, options = list(
dom = 't'),
row.names = FALSE)
datatable(goldMedalTotalsWide, options = list(
dom = 't'),
rownames = FALSE)
devtools::install_github(skoval/deuce)
devtools::install_github("skoval/deuce")
data(atp_matches)
data(wta_matches)
library(deuce)
# Load up the data from ATP and WTA tours
data(atp_matches)
data(wta_matches)
head(atp_matches)
View(atp_matches)
ausOpenATP <- atp_matches %>%
filter(tourney_name == "Australian Open" & year >= 2008)
View(ausOpenATP)
ausOpenWTA <- wta_matches %>%
filter(tourney_name == "Australian Open" & year >= 2008)
View(ausOpenWTA)
rm(ausOpenWTA)
library(ggplot2)
# Build the plot
p <- ggplot(ausOpenATP, aes(x = year, y = minutes))
p <- p + geom_point()
p
p <- ggplot(ausOpenATP, aes(x = year, y = minutes))
p <- p + geom_point(alpha = 1/4)
p
p <- ggplot(ausOpenATP, aes(x = year, y = minutes))
p <- p + geom_point(size = 2, alpha = 1/4)
p
help(geom_boxplot)
p <- ggplot(ausOpenATP, aes(x = year, y = minutes))
p <- p + geom_point(size = 2, alpha = 1/4)
p <- p + hline(median(minutes))
p <- ggplot(ausOpenATP, aes(x = year, y = minutes))
p <- p + geom_point(size = 2, alpha = 1/4)
p <- p + geom_hline(median(minutes))
p <- ggplot(ausOpenATP, aes(x = year, y = minutes))
p <- p + geom_point(size = 2, alpha = 1/4)
p <- p + geom_hline(y = median(minutes))
p <- ggplot(ausOpenATP, aes(x = year, y = minutes))
p <- p + geom_point(size = 2, alpha = 1/4)
p <- p + geom_hline(aes(yintercept = median(minutes)))
p
p <- ggplot(ausOpenATP, aes(x = year, y = minutes))
p <- p + geom_point(size = 2, alpha = 1/4)
p <- p + geom_hline(aes(yintercept = median(minutes, na.rm = TRUE)))
p
p <- ggplot(ausOpenATP, aes(x = year, y = minutes), group = year)
p <- p + geom_point(size = 2, alpha = 1/4)
p <- p + geom_hline(aes(yintercept = median(minutes, na.rm = TRUE)))
p
p <- ggplot(ausOpenATP, aes(x = year, y = minutes, group = year))
p <- p + geom_point(size = 2, alpha = 1/4)
p <- p + geom_hline(aes(yintercept = median(minutes, na.rm = TRUE)))
p
p <- ggplot(ausOpenATP, aes(x = year, y = minutes, group = year))
p <- p + geom_point(size = 3, alpha = 1/5)
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = minutes, group = year))
p <- p + geom_point(size = 3, alpha = 1/5)
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = minutes, group = year))
p <- p + geom_point(aes(group = cut_width(year, 0.25)), outlier.alpha = 0.1)
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = minutes, group = year))
p <- p + geom_point(aes(group = cut_width(year, 0.25)), outlier.alpha = 0.1)
p <- ggplot(ausOpenATP, aes(x = factor(year), y = minutes, group = year))
p <- p + geom_boxplot(aes(group = cut_width(year, 0.25)), outlier.alpha = 0.1)
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = minutes, group = year))
p <- p + geom_boxplot(aes(group = cut_width(year, 0.25)), outlier.alpha = 0.5)
p
View(ausOpenATP)
p <- ggplot(ausOpenATP, aes(x = factor(year), y = w_ace, group = year))
p <- p + geom_point()
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = w_ace, group = year))
p <- p + geom_point(alpha = 1/4)
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, group = year))
p <- p + geom_point(alpha = 1/4)
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, group = year))
# p <- p + geom_point(alpha = 1/4)
p <- p + geom_boxplot(aes(group = cut_width(year, 0.25)), outlier.alpha = 0.5)
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, group = year))
# p <- p + geom_point(alpha = 1/4)
p <- p + geom_boxplot(aes(group = cut_width(year, 0.25)),
outlier.alpha = 0.5,
fill = winner_age)
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, group = year))
# p <- p + geom_point(alpha = 1/4)
p <- p + geom_boxplot(aes(group = cut_width(year, 0.25)),
outlier.alpha = 0.5,
colour = winner_age)
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, fill = winner_age))
p <- p + geom_point(alpha = 1/5)
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age))
p <- p + geom_point(alpha = 1/5, fill = winner_age)
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, fill = winner_age))
p <- p + geom_point(alpha = 1/5, colour = winner_age)
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, fill = winner_age))
p <- p + geom_point(alpha = 1/5)
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, fill = winner_age))
p <- p + geom_point(alpha = 1/5, size = 3, aes(colour = winner_age))
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, fill = winner_age))
p <- p + geom_point(alpha = 1/6, size = 4, aes(colour = winner_age))
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, fill = winner_age))
p <- p + geom_boxplot(aes(group = cut_width(year, 0.25)),
outlier.alpha = 0.5)
p
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, fill = winner_age))
p <- p + geom_boxplot(aes(group = cut_width(year, 0.25), colour = winner_age),
outlier.alpha = 0.5)
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, fill = winner_age))
p <- p + geom_boxplot(aes(group = cut_width(year, 0.25)),
outlier.alpha = 0.5)
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, fill = winner_age))
p <- p + geom_boxplot(aes(group = cut_width(year, 0.25)),
outlier.alpha = 0.5)
p <- p + labs(x = "Year",
y = "Age of winner")
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, fill = winner_age))
p <- p + geom_boxplot(aes(group = cut_width(year, 0.25)),
outlier.alpha = 0.5)
p <- p + labs(Title = "Age of match winners at the Australian Open, 2008-2017",
x = "Year",
y = "Age of winner")
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, fill = winner_age))
p <- p + geom_boxplot(aes(group = cut_width(year, 0.25), colour = winner_age),
outlier.alpha = 0.5)
p <- p + scale_colour_gradient(low = "blue")
p <- p + labs(Title = "Age of match winners at the Australian Open, 2008-2017",
x = "Year",
y = "Age of winner")
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, fill = winner_age))
p <- p + geom_boxplot(aes(group = cut_width(year, 0.25)),
fill = "white",
colour = "#3366FF",
outlier.alpha = 0.5)
p <- p + labs(Title = "Age of match winners at the Australian Open, 2008-2017",
x = "Year",
y = "Age of winner")
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, fill = winner_age))
p <- p + geom_boxplot(aes(group = cut_width(year, 0.25)),
fill = "white",
colour = "#3366FF",
outlier.alpha = 0.5,
outlier.size = 3)
p <- p + labs(Title = "Age of match winners at the Australian Open, 2008-2017",
x = "Year",
y = "Age of winner")
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, fill = winner_age))
p <- p + geom_boxplot(aes(group = cut_width(year, 0.25)),
fill = "white",
colour = "#3366FF",
outlier.alpha = 0.5,
outlier.size = 2)
p <- p + labs(Title = "Age of match winners at the Australian Open, 2008-2017",
x = "Year",
y = "Age of winner")
p
p <- ggplot(ausOpenATP, aes(x = factor(year), y = winner_age, fill = winner_age))
p <- p + geom_boxplot(aes(group = cut_width(year, 0.25)),
fill = "white",
colour = "#3366FF",
outlier.alpha = 0.5,
outlier.size = 2)
p <- p + labs(title = "Age of match winners at the Australian Open, 2008-2017",
x = "Year",
y = "Age of winner")
p
